name: Test and Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint . --ext .js,.ejs || true
    
    - name: Check YAML files
      run: |
        sudo apt-get update
        sudo apt-get install -y yamllint
        yamllint -c .yamllint.yml . || true

  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.cloud-init
        platforms: ${{ matrix.platform }}
        push: false
        tags: test-build:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test-deployment:
    needs: docker-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build and start containers
      run: |
        docker-compose -f docker-compose-cloud-init.yml build
        docker-compose -f docker-compose-cloud-init.yml up -d
    
    - name: Wait for services
      run: |
        echo "Waiting for services to start..."
        sleep 30
    
    - name: Test web interface
      run: |
        curl -f http://localhost:3000 || exit 1
        echo "Web interface is accessible"
    
    - name: Test cloud-init endpoint
      run: |
        curl -f http://localhost:80/cloud-init/meta-data || exit 1
        echo "Cloud-init endpoint is accessible"
    
    - name: Test TFTP service
      run: |
        sudo apt-get update
        sudo apt-get install -y tftp-hpa
        echo "get netboot.xyz.kpxe /tmp/test.kpxe" | tftp localhost 69 || true
        test -f /tmp/test.kpxe && echo "TFTP service is working" || echo "TFTP test failed (may be normal in CI)"
    
    - name: Container logs on failure
      if: failure()
      run: |
        docker-compose -f docker-compose-cloud-init.yml logs
    
    - name: Stop containers
      if: always()
      run: |
        docker-compose -f docker-compose-cloud-init.yml down

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run Dockerfile linter
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile.cloud-init
        ignore: DL3008,DL3009