FROM alpine:3.21.3

# set version label
ARG BUILD_DATE
ARG VERSION
ARG WEBAPP_VERSION

LABEL build_version="Cloud-Init-PXE-cloud-init version: ${VERSION} Build-date: ${BUILD_DATE}"
LABEL maintainer="custom"
LABEL org.opencontainers.image.description="Cloud-Init-PXE with cloud-init editing capabilities"

RUN \
 apk update && \
 apk upgrade && \
 apk add --no-cache \
   bash \
   busybox \
   curl \
   envsubst \
   git \
   jq \
   nghttp2-dev \
   nginx \
   nodejs \
   shadow \
   sudo \
   supervisor \
   syslog-ng \
   tar \
   dnsmasq \
   tftp-hpa \
   # Additional packages for cloud-init support
   python3 \
   py3-pip \
   py3-yaml && \
 apk add --no-cache --virtual=build-dependencies \
   npm && \
 groupmod -g 1000 users && \
 useradd -u 911 -U -d /config -s /bin/false cipxe && \
 usermod -G users cipxe && \
 mkdir /app \
       /config \
       /defaults \
       /cloud-init \
       /cloud-init/configs \
       /cloud-init/templates

COPY . /app
COPY cloud-init/ /cloud-init/

# Debug: List cloud-init contents
RUN ls -la /cloud-init/

# Copy setup script to a safe location
RUN cp /cloud-init/setup-cloud-init.sh /usr/local/bin/setup-cloud-init.sh && \
    chmod +x /usr/local/bin/setup-cloud-init.sh

# Copy cloud-init handler to app directory where it can access node_modules
RUN cp /cloud-init/cloud-init-handler.js /app/cloud-init-handler.js

RUN \
 npm install --prefix /app && \
 apk del --purge build-dependencies && \
 rm -rf /tmp/* && \
 # Ensure cloud-init scripts are executable
 chmod +x /cloud-init/*.sh 2>/dev/null || true

ENV TFTPD_OPTS=''
ENV NGINX_PORT='80'
ENV WEB_APP_PORT='3000'

EXPOSE 69/udp
EXPOSE 80
EXPOSE 3000

COPY root/ /

# default command
CMD ["sh","/start-cloud-init.sh"] 