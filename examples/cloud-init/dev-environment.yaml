#cloud-config
# Example: Development Environment with Docker, VS Code Server, and common tools

# Set hostname
hostname: dev-box
fqdn: dev-box.local

# Configure locale and timezone
locale: en_US.UTF-8
timezone: UTC

# Update and upgrade packages
package_update: true
package_upgrade: true

# Add Docker repository
apt:
  sources:
    docker:
      source: deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

# Install packages
packages:
  - build-essential
  - git
  - curl
  - wget
  - vim
  - tmux
  - htop
  - net-tools
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose-plugin
  - python3-pip
  - nodejs
  - npm
  - golang-go
  - jq
  - tree
  - ncdu
  - iotop
  - zsh
  - fonts-powerline

# Create developer user
users:
  - name: developer
    groups: [sudo, docker]
    shell: /bin/zsh
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh_authorized_keys:
      - ssh-rsa AAAAB3Nza... your-ssh-key-here

# Write configuration files
write_files:
  # Docker daemon configuration
  - path: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2"
      }
    owner: root:root
    permissions: '0644'

  # VS Code Server installer script
  - path: /home/developer/install-code-server.sh
    content: |
      #!/bin/bash
      curl -fsSL https://code-server.dev/install.sh | sh
      sudo systemctl enable --now code-server@developer
      
      # Configure code-server
      mkdir -p ~/.config/code-server
      cat > ~/.config/code-server/config.yaml << EOF
      bind-addr: 0.0.0.0:8080
      auth: password
      password: changeme
      cert: false
      EOF
      
      sudo systemctl restart code-server@developer
    owner: developer:developer
    permissions: '0755'

  # Development tools setup script
  - path: /home/developer/setup-dev-tools.sh
    content: |
      #!/bin/bash
      
      # Install Oh My Zsh
      sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      
      # Install useful ZSH plugins
      git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
      git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
      
      # Configure .zshrc
      sed -i 's/plugins=(git)/plugins=(git docker docker-compose golang node npm zsh-autosuggestions zsh-syntax-highlighting)/' ~/.zshrc
      echo 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> ~/.zshrc
      
      # Install Node Version Manager (nvm)
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      
      # Install Python development tools
      pip3 install --user pipenv virtualenv black flake8 pytest ipython
      
      # Install Go development tools
      go install golang.org/x/tools/gopls@latest
      go install github.com/go-delve/delve/cmd/dlv@latest
      
      # Install useful Docker images
      docker pull alpine:latest
      docker pull ubuntu:latest
      docker pull node:lts
      docker pull python:3.11
      docker pull golang:latest
      docker pull postgres:latest
      docker pull redis:latest
      
      # Create common directories
      mkdir -p ~/projects ~/scripts ~/docker-compose
    owner: developer:developer
    permissions: '0755'

  # Sample docker-compose.yml for development databases
  - path: /home/developer/docker-compose/dev-stack.yml
    content: |
      version: '3.8'
      
      services:
        postgres:
          image: postgres:15
          environment:
            POSTGRES_USER: developer
            POSTGRES_PASSWORD: devpass
            POSTGRES_DB: devdb
          ports:
            - "5432:5432"
          volumes:
            - postgres_data:/var/lib/postgresql/data
        
        redis:
          image: redis:7-alpine
          ports:
            - "6379:6379"
          command: redis-server --requirepass devpass
        
        adminer:
          image: adminer
          ports:
            - "8081:8080"
          environment:
            ADMINER_DEFAULT_SERVER: postgres
      
      volumes:
        postgres_data:
    owner: developer:developer
    permissions: '0644'

  # Git configuration
  - path: /home/developer/.gitconfig
    content: |
      [user]
        name = Developer
        email = developer@example.com
      [core]
        editor = vim
      [alias]
        st = status
        co = checkout
        br = branch
        ci = commit
        lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    owner: developer:developer
    permissions: '0644'

# Run commands
runcmd:
  # Start Docker service
  - systemctl start docker
  - systemctl enable docker
  
  # Add developer to docker group (requires relogin)
  - usermod -aG docker developer
  
  # Install lazydocker
  - curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
  
  # Install lazygit
  - |
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
    curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    tar xf lazygit.tar.gz lazygit
    install lazygit /usr/local/bin
    rm -f lazygit lazygit.tar.gz
  
  # Run setup scripts as developer user
  - su - developer -c "/home/developer/install-code-server.sh"
  - su - developer -c "/home/developer/setup-dev-tools.sh"
  
  # Configure firewall
  - ufw allow 22/tcp
  - ufw allow 8080/tcp
  - ufw allow 3000:9999/tcp
  - ufw --force enable

# Configure swap
swap:
  filename: /swapfile
  size: 2G

# Final message
final_message: |
  Development environment is ready!
  
  Access:
  - SSH: ssh developer@$HOSTNAME
  - VS Code Server: http://$HOSTNAME:8080 (password: changeme)
  
  Installed tools:
  - Docker & Docker Compose
  - Go, Node.js, Python development tools
  - Git, tmux, vim, zsh with Oh My Zsh
  - VS Code Server
  - PostgreSQL and Redis (via Docker Compose)
  
  Quick start:
  1. Change VS Code Server password in ~/.config/code-server/config.yaml
  2. Start dev databases: cd ~/docker-compose && docker compose -f dev-stack.yml up -d
  3. Your projects directory: ~/projects
  
  Happy coding! ðŸš€